#!/bin/bash
set -x

subject=SUBJECTID
work_dir=WORKDIR
data_dir=DATADIR
run_folder=RUNDIR
out_dir=OUTDIR
half2_ILI=HALF2ILI
min=MIN

random_label=$(uuidgen)
sub_work_dir=${work_dir}/${subject}/${random_label}

echo "Sif file used: /home/faird/shared/projects/wlf-test/ILI-reliability-wrapper/crossotope/crossotope.sif (copied from /home/feczk001/day00096/ili_container/crossotope.sif)"

if [ ! -d "${sub_work_dir}" ]; then
	mkdir -p "${sub_work_dir}"
fi

echo "Subject-specific working directory created:"
ls "$sub_work_dir"

# running on seven target roi
rois_dir=/home/faird/shared/projects/wlf-test/fr/output-half-HCP
two_customized_roi_dir=/home/faird/shared/projects/wlf-test/fr/IFGVAN-roi-customized
config_file=${run_folder}/config.json
correlation_script=${run_folder}/intrasubject_similarity.py

singularity=`which singularity`
MRE="/home/faird/shared/code/external/utilities/MATLAB_Runtime_R2019a_update9/v96"

LR_outdir=${sub_work_dir}/LR
if [ ! -d "${LR_outdir}" ]; then
    mkdir -p "${LR_outdir}"
fi

echo "LR_outdir created:"
ls "$LR_outdir"

## RUN crossotope.sif on x min sample of half1 dtseries for 7 ROIS to generate L&R values
for roi_dir in "$rois_dir"/L_{55b,V1,4,FEF,FFC}_ROI/ ${two_customized_roi_dir}/{new_IFG_roi,VAN_MTG}; do
    echo "$roi_dir"
    roi=$(basename "$roi_dir")

    subdir="${data_dir}/${subject}"
    dtseries=${subject}_half1.dtseries.nii
    motion=${subject}_half1_power_2014_FD_only.mat

    env -i ${singularity} run \
    -B ${subdir}:/session \
    -B ${roi_dir}:/input_rois \
    -B ${MRE}:/matlab \
    -B ${config_file}:/config.json \
    -B ${LR_outdir}:/output \
    /home/faird/shared/projects/wlf-test/ILI-reliability-wrapper/crossotope/crossotope.sif analysis \
    --roi_dir /input_rois --n_samples 100 --matlab "$(which matlab)" --MRE /matlab \
    --json_config /config.json --label ${roi} \
    /session/{${dtseries},${motion}}
done

## RUN ILI on x min sample of half1 dtseries for 7 ROIS

# Check if the directory contains 7 CSV files
csv_count=$(ls -1 "${LR_outdir}"/*.csv 2>/dev/null | wc -l)
if [ "$csv_count" -ne 7 ]; then
    echo "The directory does not contain 7 CSV files (containing L & R values for each ROI). Exiting."
    exit 1
fi

#first remove hashes from csv files in output dir of prior step (should contain 7 total)
for csv_file in `ls ${LR_outdir}/*.csv`; do
    sed 's|# ||' <${csv_file} >${LR_outdir}/blah.csv
    mv ${LR_outdir}/blah.csv ${csv_file}
    sed -i '/^$/d' ${csv_file}
    sed -i '/^,/d' ${csv_file}
    awk -F',' 'NF==4 {print}' ${csv_file} >> ${LR_outdir}/blah.csv
    mv ${LR_outdir}/blah.csv ${csv_file}
done

# Run the crossotope.sif ili, where input is LR_outdir containing 7 csv files generated in prior step (eg out/5min/MSC01/LR) and output is a new output folder called ILI to store ILI csv (eg out/5min/MSC01/ILI)

#Make ILI output directory if it doesn't already exist
ILI_outdir=${sub_work_dir}/ILI
if [ ! -d "${ILI_outdir}" ]; then
    mkdir -p "${ILI_outdir}"
fi

echo "ILI_outdir created:"
ls "$ILI_outdir"

singularity run \
    -B "${LR_outdir}:/input" \
    -B "${ILI_outdir}:/output" \
    /home/faird/shared/projects/wlf-test/ILI-reliability-wrapper/crossotope/crossotope.sif ili /input /output/output.csv

## Run correlation
half1_csv=${ILI_outdir}/output.csv
half2_csv=${half2_ILI}/${subject}/output.csv

# Print csv file contents to log
echo "Newly generated ILI csv file path and contents of csv for this run:"
ls "$half1_csv"
cat "$half1_csv"

echo "Existing ILI csv file path and contents of csv pre-calculated from the second half of the dtseries:"
ls "$half2_csv"
cat "$half2_csv"

correlation=$(python3 ${correlation_script} ${half1_csv} ${half2_csv})
echo "Calculated correlation value:"
echo "$correlation"
echo "$correlation" >> ${out_dir}/${subject}_${min}_correlation.csv
